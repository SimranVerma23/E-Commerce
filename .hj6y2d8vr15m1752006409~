import React from 'react';
import {Link} from "react-router-dom";
import { withFormik} from "formik";
import * as Yup from 'yup';
import Input from './Input';
import axios from 'axios';
import { WithAlertProvider, WithUserProvider } from "./WithProvider";
// import Alert from './Alert';
 

function callSignupApi(values,setAlert, bag) {
  console.log("alert", setAlert);
   axios.post("https://myeasykart.codeyogi.io/signup", {
      fullName:values.fullName,
      email: values.email,
      password: values.password
    }).then((response) => {
      console.log("response login api", response.data);

      const { user, token } = response.data
      localStorage.setItem("token", token);
      bag.props.setUser(user);
      console.log("alert", setAlert);
      setAlert({
        type: "success",
        message: "Successfully signup",
      })

    }).catch((error) => {
      if (error) {
        setAlert({
          type: "error",
          message: "Sorry signup faild",
       })
     }
    }) 
}


   const schema =  Yup.object().shape({
     fullName:Yup.string().required(),
     email:Yup.string().email('Invalid email').required(),
     password:Yup.string().min(8).required(),
   })
   
   const initialValues={
      fullName :"",
      password:"",
      email:"",

    }

 export function SignUpPage({values,errors, handleSubmit, handleChange,handleBlur,touched , isValid , resetForm}){
  return(
    <div className='flex flex-col mx-auto max-w-6xl bg-white p-10 sm:p-20 m-20'>
      <h1 className='text-4xl font-bold mb-4 text-gray-600'>Sign Up</h1>
      <form onSubmit={handleSubmit} className=" flex flex-col border-2 border-gray-200 p-5 rounded-md">
        <Input onChange={handleChange} onBlur={handleBlur} values={values.fullName} error={errors.fullName} touched={touched.fullName} id='user-name' name='fullName' type='text' label="User Name" required/>
        <Input onChange={handleChange} onBlur={handleBlur} values={values.email} error={errors.email} touched={touched.email} id='email' name='email' type='email' label="Email" required />
        <Input onChange={handleChange} onBlur={handleBlur} values={values.password} error={errors.password} touched={touched.password} id='password' name='password' type='password' label="Password" required/>
        <Input error={errors.password} touched={touched.password} label="Conform Password" id='conform-password' name='password' type='password' required/>
          <div>
         <button disabled={!isValid} className='disabled:bg-gray-400 disabled:text-gray-800 text-2xl text-white bg-primary-default rounded-md py-4 px-8 mb-2' type='submit'>Submit</button>
         <button onClick={ resetForm} className='text-2xl text-white bg-green-400 rounded-md py-4 px-8 mb-2 ml-2'>Reset Form</button>

         </div>
        <h1 className='text-xl text-gray-600 text-semibold'>Alread have an account?<Link className='text-blue-400 text-xl text-semibold' to="/login/">Login</Link></h1>
        </form>
    

    </div>
 );

}

const mySignUp = withFormik({ handleSubmit: callSignupApi, validationSchema: schema, initialValues: initialValues, validateOnMount: true })(SignUpPage);
export default WithAlertProvider(WithUserProvider(mySignUp));